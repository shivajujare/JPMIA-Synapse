{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "jpmia-synapse-analytics"
		},
		"jpmia-synapse-analytics-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'jpmia-synapse-analytics-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:jpmia-synapse-analytics.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"jpmia-synapse-analytics-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsjpmia.dfs.core.windows.net"
		},
		"kvs_jpmia_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-jpmia-dev.vault.azure.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/jpmia-synapse-analytics-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('jpmia-synapse-analytics-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/jpmia-synapse-analytics-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('jpmia-synapse-analytics-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kvs_jpmia')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('kvs_jpmia_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ext_tables_uv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create MASTER KEY ENCRYPTION BY PASSWORD = 'jpmia#2188';\n\ndrop CREDENTIAL uv_sas_token;\ncreate DATABASE SCOPED CREDENTIAL uv_sastoken WITH IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2022-11-02&ss=b&srt=sco&sp=rwdlacyx&se=2024-03-19T01:47:30Z&st=2024-03-18T17:47:30Z&spr=https&sig=O%2Bgq9%2FKzKtLx2Yt1uAfEpQ9CYXVeEHvt6DK%2FknwGowM%3D';\n\ncreate EXTERNAL DATA SOURCE ext_usage_view_\nwith (\n    LOCATION='https://adlsjpmia.blob.core.windows.net/jpmia/usage_view/',\n    CREDENTIAL = uv_sastoken\n);\n\ncreate EXTERNAL DATA SOURCE ext_biz_view_\nwith (\n    LOCATION='https://adlsjpmia.blob.core.windows.net/jpmia/biz_view/',\n    CREDENTIAL = uv_sastoken\n);\n\nDROP EXTERNAL TABLE jpmia.DimCompanies;\nCREATE EXTERNAL FILE FORMAT uv_delta_format\nWITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec' -- Optional: specify compression codec\n);\n\n\nCREATE EXTERNAL table jpmia.DimCompanies\n(\n    company_id bigint,\n            name NVARCHAR(200),\n           description NVARCHAR(MAX),\n           company_size int,\n           formatted_company_size NVARCHAR(50),\n           state NVARCHAR(100),\n           country NVARCHAR(100),\n           city NVARCHAR(100),\n           zip_code NVARCHAR(100),\n           address NVARCHAR(3000),\n           url NVARCHAR(1000),\n           ingest_date date\n)\nWITH(\n    LOCATION = 'DimCompanies',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nselect TOP 100 ingest_date from jpmia.DimCompanies;\n\n------------\n\nCREATE EXTERNAL table jpmia.DimCompanyIndustries\n(\n    company_id bigint,\n  industries NVARCHAR(1000),\n  ingest_date date\n)\nWITH(\n    LOCATION = 'DimCompanyIndustries',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nselect top 10 * from jpmia.DimCompanyIndustries;\n\n----------------\n\nCREATE EXTERNAL table jpmia.DimCompanySpecialities(\n  company_id bigint,\n  specialities NVARCHAR(3000),\n  ingest_date date\n)\nWITH(\n    LOCATION = 'DimCompanySpecialities',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nSELECT top 10 * from jpmia.DimCompanySpecialities;\n\n-----------------\n\nCREATE EXTERNAL table jpmia.DimJobBenefits(\n  job_id bigint,\n  inferred VARCHAR(10),\n  type VARCHAR(2000),\n  ingest_date date\n  )\nWITH(\n    LOCATION = 'DimJobBenefits',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nselect * from jpmia.DimJobBenefits;\n\n------------------\n\n\n\nCREATE EXTERNAL table jpmia.DimJobSkills(\n  job_id\tbigint,\n  skill_abr NVARCHAR(1000),\n  skill_name NVARCHAR(2000),\n  ingest_date date\n  )\nWITH(\n    LOCATION = 'DimJobSkills',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nselect top 10 * from jpmia.DimJobSkills;\n\n-------------\n\nCREATE EXTERNAL table jpmia.FactCompanyEmployeeGrowth\n(\n  company_id bigint,\n  employee_count bigint,\n  follower_count bigint,\n  time_recorded NVARCHAR(1000),\n  date_time_recorded DATETIME2,\n  date_recorded date,\n  total_employees_as_of_now bigint,\n  total_followers_as_of_now bigint,\n  ingest_date date\n  )\nWITH(\n    LOCATION = 'FactCompanyEmployeeGrowth',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nSELECT * from jpmia.FactCompanyEmployeeGrowth;\n\n-------------\ndrop EXTERNAL TABLE jpmia.DimJobIndustries;\nCREATE EXTERNAL table jpmia.DimJobIndustries(\n  job_id\tbigint,\n  industry_id bigint,\n  industry_name NVARCHAR(1000),\n  ingest_date date\n  )\nWITH(\n    LOCATION = 'DimJobIndustries',\n    DATA_SOURCE = ext_usage_view_,\n    FILE_FORMAT = uv_delta_format\n)\ngo;\n\nSELECT * from jpmia.DimJobIndustries;\n\n--------\n\nCREATE EXTERNAL table jpmia.DimJobSalaries\n(\n    salary_id bigint,\n  job_id bigint,\n  max_salary float,\n  med_salary float,\n  min_salary float,\n  pay_period NVARCHAR(100),\n  currency NVARCHAR(10),\n  compensation_type NVARCHAR(100),\n  ingest_date date\n)\nWITH(\n    LOCATION = 'job_salaries',\n    DATA_SOURCE = ext_biz_view_,\n    FILE_FORMAT=uv_delta_format\n);\n\nselect top 10 * from jpmia.DimJobSalaries;\n\n-------\n\nCREATE EXTERNAL table jpmia.FactJobPostings\n(\n    job_id bigint, \n  company_id bigint,\t\n  locations NVARCHAR(500),\t\n  applies int,\t\n  original_listed_time NVARCHAR(100),\t\n  remote_allowed NVARCHAR(10),\t\n  views int,\t\n  job_posting_url\tNVARCHAR(1000), \n  application_url NVARCHAR(1000),\t\n  application_type NVARCHAR(1000),\t\n  expiry NVARCHAR(100),\t\n  closed_time NVARCHAR(100),\t\n  experience_level NVARCHAR(100),\t\n  listed_time NVARCHAR(100),\t\n  posting_domain NVARCHAR(100),\t\n  sponsored NVARCHAR(100),\t\n  work_type NVARCHAR(100),\t\n  scraped NVARCHAR(100),\n  ingest_date date\n)\nWITH(\n    LOCATION = 'job_postings',\n    DATA_SOURCE = ext_biz_view_,\n    FILE_FORMAT=uv_delta_format\n);\n\nselect top 10 * from jpmia.FactJobPostings;\n\nSELECT * from sys.tables;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "market-insight-analytics",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/schema')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE SCHEMA jpmia;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "market-insight-analytics",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}